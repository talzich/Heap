
Let A be a heap. Given a key of a node to update, how will you find the node? 

Add a function to a Heap class that finds a node by key and replaces it. 
Analyze time complexity for the function you wrote. 


***Answer***

A heap is represented by an unsorted array, therefore, in order to find the right node we must traverse the whole heap. 
It is possible to stop searching if you find a node with a higher/lower key (depends on whether you implement a MaxHeap or a MinHeap) but complexity of
searching will still be O(n).

Code for MaxHeap java implementaion, including the "replace" function is in MyHeap file in this repos.

